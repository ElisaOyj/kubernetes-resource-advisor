name: Default Branch

on:
  push:
    branches:
    - main

jobs:
  test-master:
    runs-on:
    - self-hosted
    - kaas
    timeout-minutes: 15
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 1

    - name: Retrieve Go version
      run: echo "GO_VERSION=$(make go-version)" >> $GITHUB_OUTPUT
      id: version

    - uses: actions/setup-go@v4
      with:
        go-version: ${{ steps.version.outputs.GO_VERSION }}

    - name: Run ensure
      run: make go-ensure

    - name: Run test
      run: make go-unit-test

    - name: Run lint
      run: make go-lint

    - uses: elisa-actions/release-drafter@v5
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        disable-releaser: false
        disable-autolabeler: true

  build-packages:
    runs-on:
    - self-hosted
    - kaas
    timeout-minutes: 30
    needs: test-master
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 1

    - name: Retrieve Go version
      run: echo "GO_VERSION=$(make go-version)" >> $GITHUB_OUTPUT
      id: version

    - uses: actions/setup-go@v4
      with:
        go-version: ${{ steps.version.outputs.GO_VERSION }}

    - name: Run ensure
      run: go-ensure

    - name: Build and package binaries
      run: make build-subset

    - name: Notify failure
      if: failure()
      env:
        MATTERMOST_WEBHOOK_URL: ${{ secrets.MATTERMOST_WEBHOOK_URL }}
        MATTERMOST_TEXT: "${{ github.repository }} release [${{ github.event.release.tag_name }}](${{ github.event.release.html_url }}) build failed."
      run: send-to-mattermost
